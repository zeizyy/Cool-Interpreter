
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '05F27B0E095BFEC964DFBC75A1ADCC1D'
    
_lr_action_items = {'THEN':([4,14,39,40,43,44,46,49,50,53,56,59,65,67,68,69,71,92,95,96,97,98,99,100,102,103,104,108,110,122,123,127,128,132,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,-46,-54,-55,93,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-38,-32,-34,-41,-27,-33,]),'WHILE':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'COLON':([14,18,29,31,36,85,116,],[-6,24,35,37,61,24,129,]),'NEW':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'FI':([4,14,39,40,43,44,46,49,50,53,56,59,65,67,68,69,92,95,96,97,98,99,100,102,103,104,108,110,122,123,127,128,132,136,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,-46,-54,-55,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-38,-32,-34,-41,-27,138,-33,]),'INTEGER':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'MINUS':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,81,-57,81,-45,81,-46,-54,81,81,81,81,-56,-35,81,-50,81,-49,81,-47,-48,-26,81,-31,81,81,81,81,81,-32,81,-34,-41,-27,81,-33,81,]),'DOT':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,101,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,82,-57,82,-45,82,82,82,82,82,82,82,-56,-35,82,82,82,82,82,120,82,82,-26,82,-31,82,82,82,82,82,-32,82,-34,-41,-27,82,-33,82,]),'RBRACE':([4,8,14,15,21,22,26,27,39,40,43,44,46,49,50,53,56,59,65,67,68,69,73,92,94,95,96,97,98,99,100,102,103,104,108,110,112,119,122,123,126,127,128,132,138,],[-5,-7,-6,23,-7,-7,33,-8,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,-46,-54,-55,95,-56,-36,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,125,-37,-38,-32,134,-34,-41,-27,-33,]),'CASE':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LE':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,74,-57,74,-45,74,-46,-54,74,74,74,74,-56,-35,None,-50,None,-49,None,-47,-48,-26,74,-31,74,74,74,74,74,-32,74,-34,-41,-27,74,-33,74,]),'RPAREN':([4,14,25,30,32,39,40,43,44,46,49,50,53,56,59,62,63,65,67,68,69,70,87,92,95,96,97,98,99,100,102,103,104,108,109,110,111,122,123,127,128,132,133,138,],[-5,-6,29,36,-20,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-22,-21,-45,-46,-54,-55,92,110,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,123,-31,-24,-38,-32,-34,-41,-27,-25,-33,]),'SEMI':([3,4,11,12,13,14,16,17,19,20,23,28,33,39,40,43,44,46,49,50,53,56,57,59,65,67,68,69,72,92,95,96,97,98,99,100,102,103,104,108,110,122,123,125,127,128,132,134,138,139,],[6,-5,-17,22,-14,-6,-18,-9,-10,-13,-3,-11,-4,-60,-28,-59,-61,-30,-19,-29,-58,-62,-12,-57,-45,-46,-54,-55,94,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-38,-32,-15,-34,-41,-27,-16,-33,140,]),'RARROW':([4,135,],[-5,137,]),'ISVOID':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'LARROW':([4,14,28,59,],[-5,-6,34,86,]),'LT':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,78,-57,78,-45,78,-46,-54,78,78,78,78,-56,-35,None,-50,None,-49,None,-47,-48,-26,78,-31,78,78,78,78,78,-32,78,-34,-41,-27,78,-33,78,]),'PLUS':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,80,-57,80,-45,80,-46,-54,80,80,80,80,-56,-35,80,-50,80,-49,80,-47,-48,-26,80,-31,80,80,80,80,80,-32,80,-34,-41,-27,80,-33,80,]),'TILDE':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'COMMA':([4,14,17,19,28,32,39,40,43,44,46,49,50,53,56,57,59,62,65,67,68,69,83,92,95,96,97,98,99,100,102,103,104,108,110,111,122,123,127,128,132,138,],[-5,-6,-9,-10,-11,38,-60,-28,-59,-61,-30,-19,-29,-58,-62,-12,-57,-22,-45,-46,-54,-55,106,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,124,-38,-32,-34,-41,-27,-33,]),'STRING':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'IDENTIFIER':([8,21,22,25,34,38,41,45,47,48,51,52,54,55,58,74,75,76,77,78,80,81,82,86,87,88,90,91,93,94,106,107,113,117,120,124,131,137,140,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-42,]),'CLASS':([0,6,],[1,1,]),'$end':([2,6,9,],[0,-1,-2,]),'INHERITS':([4,5,],[-5,7,]),'DIVIDE':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,75,-57,75,-45,75,-46,-54,75,75,75,75,-56,-35,75,-50,75,-49,75,75,75,-26,75,-31,75,75,75,75,75,-32,75,-34,-41,-27,75,-33,75,]),'EQUALS':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,76,-57,76,-45,76,-46,-54,76,76,76,76,-56,-35,None,-50,None,-49,None,-47,-48,-26,76,-31,76,76,76,76,76,-32,76,-34,-41,-27,76,-33,76,]),'TIMES':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,77,-57,77,-45,77,-46,-54,77,77,77,77,-56,-35,77,-50,77,-49,77,77,77,-26,77,-31,77,77,77,77,77,-32,77,-34,-41,-27,77,-33,77,]),'ESAC':([115,117,130,140,],[128,-43,-44,-42,]),'AT':([4,14,39,40,43,44,46,49,50,53,56,57,59,64,65,66,67,68,69,70,71,72,92,95,96,97,98,99,100,102,103,104,108,110,111,112,114,118,122,123,126,127,128,132,136,138,139,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,79,-57,79,-45,79,79,79,79,79,79,79,-56,-35,79,79,79,79,79,79,79,-26,79,-31,79,79,79,79,79,-32,79,-34,-41,-27,79,-33,79,]),'LPAREN':([14,18,34,41,45,47,48,51,52,54,55,59,74,75,76,77,78,80,81,86,87,88,90,93,94,105,107,113,124,131,137,],[-6,25,52,52,52,52,52,52,52,52,52,87,52,52,52,52,52,52,52,52,52,52,52,52,52,87,52,52,52,52,52,]),'IN':([4,14,17,19,28,39,40,43,44,46,49,50,53,56,57,59,65,67,68,69,83,84,92,95,96,97,98,99,100,102,103,104,108,110,121,122,123,127,128,132,138,],[-5,-6,-9,-10,-11,-60,-28,-59,-61,-30,-19,-29,-58,-62,-12,-57,-45,-46,-54,-55,-39,107,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-40,-38,-32,-34,-41,-27,-33,]),'ELSE':([4,14,39,40,43,44,46,49,50,53,56,59,65,67,68,69,92,95,96,97,98,99,100,102,103,104,108,110,118,122,123,127,128,132,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,-46,-54,-55,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,131,-38,-32,-34,-41,-27,-33,]),'POOL':([4,14,39,40,43,44,46,49,50,53,56,59,65,67,68,69,92,95,96,97,98,99,100,102,103,104,108,110,114,122,123,127,128,132,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,-46,-54,-55,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,127,-38,-32,-34,-41,-27,-33,]),'IF':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'LBRACE':([4,5,10,34,41,45,47,48,51,52,54,55,60,74,75,76,77,78,80,81,86,87,88,89,90,93,94,107,113,124,131,137,],[-5,8,21,55,55,55,55,55,55,55,55,55,88,55,55,55,55,55,55,55,55,55,55,113,55,55,55,55,55,55,55,55,]),'FALSE':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'OF':([4,14,39,40,43,44,46,49,50,53,56,59,65,66,67,68,69,92,95,96,97,98,99,100,102,103,104,108,110,122,123,127,128,132,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,-45,91,-46,-54,-55,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-38,-32,-34,-41,-27,-33,]),'LET':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'NOT':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TYPE':([1,7,24,35,37,42,61,79,129,],[4,4,4,4,4,4,4,4,4,]),'LOOP':([4,14,39,40,43,44,46,49,50,53,56,59,64,65,67,68,69,92,95,96,97,98,99,100,102,103,104,108,110,122,123,127,128,132,138,],[-5,-6,-60,-28,-59,-61,-30,-19,-29,-58,-62,-57,90,-45,-46,-54,-55,-56,-35,-53,-50,-51,-49,-52,-47,-48,-26,-23,-31,-38,-32,-34,-41,-27,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'feature_attribute':([8,21,22,58,106,],[11,11,11,83,83,]),'expr_list':([87,124,],[109,133,]),'formallist':([25,38,],[30,63,]),'function_call':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,82,86,87,88,90,93,94,107,113,120,124,131,137,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,104,40,40,40,40,40,40,40,40,132,40,40,40,]),'feature_attribute_no_init':([8,21,22,58,106,],[17,17,17,17,17,]),'feature_attribute_init':([8,21,22,58,106,],[19,19,19,19,19,]),'p_feature_method_formal':([8,21,22,],[13,13,13,]),'function_call_expr':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,82,86,87,88,90,93,94,107,113,120,124,131,137,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'feature':([8,21,22,],[12,12,12,]),'program':([0,6,],[2,9,]),'type':([1,7,24,35,37,42,61,79,129,],[5,10,28,60,62,65,89,101,135,]),'case_item':([91,117,],[117,117,]),'function_call_noexpr':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,82,86,87,88,90,93,94,107,113,120,124,131,137,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'string':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'case_list':([91,117,],[115,130,]),'integer':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'class':([0,6,],[3,3,]),'formal':([25,38,],[32,32,]),'p_feature_method_noformal':([8,21,22,],[20,20,20,]),'feature_attr_list':([58,106,],[84,121,]),'expr':([34,41,45,47,48,51,52,54,55,74,75,76,77,78,80,81,86,87,88,90,93,94,107,113,124,131,137,],[57,64,66,67,68,69,70,71,72,96,97,98,99,100,102,103,108,111,112,114,118,72,122,126,111,136,139,]),'featurelist':([8,21,22,],[15,26,27,]),'feature_method':([8,21,22,],[16,16,16,]),'identifier':([8,21,22,25,34,38,41,45,47,48,51,52,54,55,58,74,75,76,77,78,80,81,82,86,87,88,90,91,93,94,106,107,113,117,120,124,131,137,],[18,18,18,31,59,31,59,59,59,59,59,59,59,59,85,59,59,59,59,59,59,59,105,59,59,59,59,116,59,59,85,59,59,116,105,59,59,59,]),'block':([55,94,],[73,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class SEMI','program',2,'p_program_class','main.py',108),
  ('program -> class SEMI program','program',3,'p_program_classlist','main.py',112),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noninherit','main.py',116),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherits','main.py',120),
  ('type -> TYPE','type',1,'p_type','main.py',124),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',128),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',132),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',136),
  ('feature_attribute -> feature_attribute_no_init','feature_attribute',1,'p_feature_attribute','main.py',140),
  ('feature_attribute -> feature_attribute_init','feature_attribute',1,'p_feature_attribute','main.py',141),
  ('feature_attribute_no_init -> identifier COLON type','feature_attribute_no_init',3,'p_feature_attributenoinit','main.py',145),
  ('feature_attribute_init -> identifier COLON type LARROW expr','feature_attribute_init',5,'p_feature_attributeinit','main.py',149),
  ('feature_method -> p_feature_method_noformal','feature_method',1,'p_feature_method','main.py',153),
  ('feature_method -> p_feature_method_formal','feature_method',1,'p_feature_method','main.py',154),
  ('p_feature_method_noformal -> identifier LPAREN RPAREN COLON type LBRACE expr RBRACE','p_feature_method_noformal',8,'p_feature_method_noformal','main.py',158),
  ('p_feature_method_formal -> identifier LPAREN formallist RPAREN COLON type LBRACE expr RBRACE','p_feature_method_formal',9,'p_feature_method_formal','main.py',162),
  ('feature -> feature_attribute','feature',1,'p_feature','main.py',166),
  ('feature -> feature_method','feature',1,'p_feature','main.py',167),
  ('string -> STRING','string',1,'p_string','main.py',171),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',175),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',179),
  ('formal -> identifier COLON type','formal',3,'p_formal','main.py',183),
  ('expr -> identifier LARROW expr','expr',3,'p_expr_assign','main.py',187),
  ('expr_list -> expr','expr_list',1,'p_expr_list_one','main.py',191),
  ('expr_list -> expr COMMA expr_list','expr_list',3,'p_expr_list_some','main.py',195),
  ('expr -> expr DOT function_call','expr',3,'p_expr_dynamic_dispatch','main.py',199),
  ('expr -> expr AT type DOT function_call','expr',5,'p_expr_static_dispatch','main.py',204),
  ('expr -> function_call','expr',1,'p_expr_self_dispatch','main.py',209),
  ('function_call -> function_call_noexpr','function_call',1,'p_func_call','main.py',214),
  ('function_call -> function_call_expr','function_call',1,'p_func_call','main.py',215),
  ('function_call_noexpr -> identifier LPAREN RPAREN','function_call_noexpr',3,'p_func_call_noexpr','main.py',219),
  ('function_call_expr -> identifier LPAREN expr_list RPAREN','function_call_expr',4,'p_func_call_expr','main.py',223),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_condition','main.py',227),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',231),
  ('expr -> LBRACE block RBRACE','expr',3,'p_expr_block','main.py',235),
  ('block -> expr SEMI','block',2,'p_block_single','main.py',239),
  ('block -> expr SEMI block','block',3,'p_block_some','main.py',243),
  ('expr -> LET feature_attr_list IN expr','expr',4,'p_expr_let','main.py',247),
  ('feature_attr_list -> feature_attribute','feature_attr_list',1,'p_feature_attr_list_single','main.py',251),
  ('feature_attr_list -> feature_attribute COMMA feature_attr_list','feature_attr_list',3,'p_feature_attr_list_some','main.py',255),
  ('expr -> CASE expr OF case_list ESAC','expr',5,'p_expr_case','main.py',259),
  ('case_item -> identifier COLON type RARROW expr SEMI','case_item',6,'p_case_item','main.py',263),
  ('case_list -> case_item','case_list',1,'p_case_list_single','main.py',267),
  ('case_list -> case_item case_list','case_list',2,'p_case_list_some','main.py',271),
  ('expr -> NEW type','expr',2,'p_new','main.py',275),
  ('expr -> ISVOID expr','expr',2,'p_isvoid','main.py',279),
  ('expr -> expr PLUS expr','expr',3,'p_binary_expr_sum','main.py',283),
  ('expr -> expr MINUS expr','expr',3,'p_binary_expr_sum','main.py',284),
  ('expr -> expr TIMES expr','expr',3,'p_binary_expr_sum','main.py',285),
  ('expr -> expr DIVIDE expr','expr',3,'p_binary_expr_sum','main.py',286),
  ('expr -> expr EQUALS expr','expr',3,'p_binary_expr_sum','main.py',287),
  ('expr -> expr LT expr','expr',3,'p_binary_expr_sum','main.py',288),
  ('expr -> expr LE expr','expr',3,'p_binary_expr_sum','main.py',289),
  ('expr -> TILDE expr','expr',2,'p_unary_expr','main.py',293),
  ('expr -> NOT expr','expr',2,'p_unary_expr','main.py',294),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_paren','main.py',298),
  ('expr -> identifier','expr',1,'p_expr_id','main.py',302),
  ('expr -> integer','expr',1,'p_expr_integer','main.py',306),
  ('integer -> INTEGER','integer',1,'p_integer','main.py',310),
  ('expr -> string','expr',1,'p_expr_string','main.py',314),
  ('expr -> TRUE','expr',1,'p_expr_bool','main.py',318),
  ('expr -> FALSE','expr',1,'p_expr_bool','main.py',319),
]
